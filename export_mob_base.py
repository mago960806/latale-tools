from pathlib import Path

import pandas as pd


TEMP_DIR = Path()
CSV_PATH = Path(TEMP_DIR) / "DATA/CSV"

LDT_NAME = "MOBBASE"
EXPORT_FIELD_NAMES = [
    "ID",
    "_Name",
    "_Target_Type",
    "_Lv",
    "_Hit_Require",
    "_MOD_BaseMHP",
    "_MOD_BaseMSP",
    "_Base_Atk",
    "_Base_Def",
    "_Base_Ele",
    "_Base_Luk",
    "_Base_Guard",
    "_Base_Atk_Min_Dam",
    "_Base_Atk_Max_Dam",
    "_Base_Ele_Min_Dam",
    "_Base_Ele_Max_Dam",
    "_Base_Speed_X",
    "_Base_Speed_Y",
    "_Base_Water",
    "_BASE_DAMAGE_ABSOLUTE",
    "_BASE_REDUCE_DAMAGE_ABSOLUTE",
    "_BASE_DEF_PENETRATION",
    "_BASE_ELE_PENETRATION",
    "_BASE_JUMP_ATK",
    "_BASE_NORMAL",
    "_BASE_HEAVY",
    "_BASE_CRITICAL_DAMAGE",
    "_BASE_ELE_CRITICAL_DAMAGE",
    "_BASE_HEAL_CRITICAL_AUGMENT",
    "_BASE_HEAL_CRITICAL_PROBABILITY",
    "_CLASS_MHP_FACTOR",
    "_CLASS_MSP_FACTOR",
    "_CLASS_RECV_HP_FACTOR",
    "_CLASS_RECV_SP_FACTOR",
    "_BASE_PHY_HIT_RATE",
    "_BASE_ELE_HIT_RATE",
    "_BASE_PHY_DODGE_RATE",
    "_BASE_ELE_DODGE_RATE",
    "_BASE_BACK_DAM",
    "_BASE_ELE_BACK_DAM",
    "_BASE_ATK_ADD_FACTOR",
    "_BASE_ATK_RATIO_FACTOR",
    "_BASE_ELE_ADD_FACTOR",
    "_BASE_ELE_RATIO_FACTOR",
    "_BASE_AMOR",
    "_BASE_HEAL_HP_ADD",
    "_BASE_HEAL_SP_ADD",
    "_BASE_HEAL_HP_FACTOR",
    "_BASE_HEAL_SP_FACTOR",
    "_BASE_ELE_DAMAGE_ABSOLUTE",
    "_BASE_ELE_REDUCE_DAMAGE_ABSOLUTE",
    "_BASE_WATER_MIN_DAM",
    "_BASE_WATER_MAX_DAM",
    "_BASE_RES_WATER",
    "_WATER_DAM",
    "_PHY_IMMUNE",
    "_ELE_IMMUNE",
    "_WATER_IMMUNE",
    "_ELASTICITY",
    "_ADD_RES_STUN",
    "_ADD_RES_SLEEP",
    "_ADD_RES_CONFUSION",
    "_ADD_RES_FREEZE",
    "_BASE_DROP_SPEED",
    "_BASE_MAX_DROP_SPEED",
    "_EffectID1",
    "_EffectID2",
    "_EffectID3",
    "_EffectID4",
    "_RecallID",
    "_Drop_place",
    "_Active_mob",
    "_LifeTime",
    "_LifeTime2",
    "_Mob_Type",
    "_HP_reset",
    "_HIT_Revision",
    "_SealSkill_Probability",
    "_SealSkill_ID",
    "_Mob_Type_Dam",
    "_BossMob_Check",
    "_Difficulty_Check",
]
EXPORT_FIELD_NAMES_IN_CHINIESE = [
    "ID",
    "怪物名稱",
    "_Target_Type",
    "等級",
    "命中率要求",
    "最大HP",
    "最大SP",
    "力量",
    "體力",
    "魔法",
    "幸運",
    "減傷率(%)",
    "物理最小傷害",
    "物理最大傷害",
    "魔法最小傷害",
    "魔法最大傷害",
    "移動速度",
    "跳躍力",
    "屬性力",
    "物理固定傷害",
    "物理傷害減少",
    "物理貫穿力",
    "魔法貫穿力",
    "跳躍攻擊力",
    "最小攻擊力",
    "最大攻擊力",
    "物理暴擊傷害",
    "魔法暴擊 傷害",
    "治愈效果",
    "治愈暴擊率",
    "最大HP係數",
    "最大MP係數",
    "HP恢復倍率",
    "SP恢復倍率",
    "物理命中率",
    "魔法命中率",
    "物理回避率",
    "魔法回避率",
    "物理背後攻擊傷害",
    "魔法背後攻擊傷害",
    "_BASE_ATK_ADD_FACTOR",
    "_BASE_ATK_RATIO_FACTOR",
    "_BASE_ELE_ADD_FACTOR",
    "_BASE_ELE_RATIO_FACTOR",
    "防禦力",
    "_BASE_HEAL_HP_ADD",
    "_BASE_HEAL_SP_ADD",
    "_BASE_HEAL_HP_FACTOR",
    "_BASE_HEAL_SP_FACTOR",
    "魔法固定傷害",
    "魔法傷害減少",
    "屬性最小傷害",
    "屬性最大傷害",
    "抵抗力",
    "屬性傷害",
    "物理免疫",
    "魔法免疫",
    "屬性免疫",
    "暴擊抗性",
    "眩晕抵抗率",
    "睡眠抵抗率",
    "混乱抵抗率",
    "冰冻抵抗率",
    "下落速度",
    "最大下落速度",
    "_EffectID1",
    "_EffectID2",
    "_EffectID3",
    "_EffectID4",
    "_RecallID",
    "_Drop_place",
    "_Active_mob",
    "_LifeTime",
    "_LifeTime2",
    "_Mob_Type",
    "_HP_reset",
    "_HIT_Revision",
    "_SealSkill_Probability",
    "_SealSkill_ID",
    "怪物傷害類型",
    "是否為BOSS",
    "_Difficulty_Check",
]


def export():
    df: pd.DataFrame = pd.read_csv(CSV_PATH / f"{LDT_NAME}.csv")
    df = df.loc[df["ID"] > 810000000]
    df["_Hit_Require"] = df["_BASE_PHY_DODGE_RATE"] + df["_Lv"] * 3 - 690
    df["_Hit_Require"] = df["_Hit_Require"].clip(lower=0)
    df = df[EXPORT_FIELD_NAMES]
    df.to_csv(f"{LDT_NAME}.csv", header=EXPORT_FIELD_NAMES_IN_CHINIESE, index=False, encoding="utf-8")


if __name__ == "__main__":
    export()
